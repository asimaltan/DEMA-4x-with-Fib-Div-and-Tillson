//O2can O2bek (Özcan Özbek)
//@version=5
indicator(title='mySMAs - V1', shorttitle='mySMAs - V1', overlay=true, timeframe="")
src = input(close, title='Source')

fiyat = src

p10 = ta.sma(fiyat, 10)
p20 = ta.sma(fiyat, 20)
p50 = ta.sma(fiyat, 50)
p100 = ta.sma(fiyat, 100)
p200 = ta.sma(fiyat, 200)

plot(series=p10, title = "sma 10", color=color.orange, linewidth=2, transp=0)
plot(series=p20, title = "sma 20", color=color.yellow, linewidth=2, transp=0)
plot(series=p50, title = "sma 50", color=color.orange, linewidth=2, transp=0)
plot(series=p100, title = "sma 100", color=color.green, linewidth=2, transp=0)
plot(series=p200, title = "sma 200", color=color.blue, linewidth=2, transp=0)


//FibDiv
source = src
topbots = input(true, title='Show PPO high/low triangles?')
long_term_div = input(true, title='Use long term divergences?')
div_lookback_period = input.int(55, minval=1, title='Lookback Period')
fastLength = input.int(12, minval=1, title='PPO Fast')
slowLength = input.int(26, minval=1, title='PPO Slow')
signalLength = input.int(9, minval=1, title='PPO Signal')
smoother = input.int(2, minval=1, title='PPO Smooth')
fastMA = ta.ema(source, fastLength)
slowMA = ta.ema(source, slowLength)
macd = fastMA - slowMA
macd2 = macd / slowMA * 100
d = ta.sma(macd2, smoother)  // smoothing PPO

bullishPrice = low

priceMins = bullishPrice > bullishPrice[1] and bullishPrice[1] < bullishPrice[2] or low[1] == low[2] and low[1] < low and low[1] < low[3] or low[1] == low[2] and low[1] == low[3] and low[1] < low and low[1] < low[4] or low[1] == low[2] and low[1] == low[3] and low[1] and low[1] == low[4] and low[1] < low and low[1] < low[5]  // this line identifies bottoms and plateaus in the price
oscMins = d > d[1] and d[1] < d[2]  // this line identifies bottoms in the PPO

BottomPointsInPPO = oscMins

bearishPrice = high
priceMax = bearishPrice < bearishPrice[1] and bearishPrice[1] > bearishPrice[2] or high[1] == high[2] and high[1] > high and high[1] > high[3] or high[1] == high[2] and high[1] == high[3] and high[1] > high and high[1] > high[4] or high[1] == high[2] and high[1] == high[3] and high[1] and high[1] == high[4] and high[1] > high and high[1] > high[5]  // this line identifies tops in the price
oscMax = d < d[1] and d[1] > d[2]  // this line identifies tops in the PPO

TopPointsInPPO = oscMax

currenttrough4 = ta.valuewhen(oscMins, d[1], 0)  // identifies the value of PPO at the most recent BOTTOM in the PPO
lasttrough4 = ta.valuewhen(oscMins, d[1], 1)  // NOT USED identifies the value of PPO at the second most recent BOTTOM in the PPO
currenttrough5 = ta.valuewhen(oscMax, d[1], 0)  // identifies the value of PPO at the most recent TOP in the PPO
lasttrough5 = ta.valuewhen(oscMax, d[1], 1)  // NOT USED identifies the value of PPO at the second most recent TOP in the PPO

currenttrough6 = ta.valuewhen(priceMins, low[1], 0)  // this line identifies the low (price) at the most recent bottom in the Price
lasttrough6 = ta.valuewhen(priceMins, low[1], 1)  // NOT USED this line identifies the low (price) at the second most recent bottom in the Price
currenttrough7 = ta.valuewhen(priceMax, high[1], 0)  // this line identifies the high (price) at the most recent top in the Price
lasttrough7 = ta.valuewhen(priceMax, high[1], 1)  // NOT USED this line identifies the high (price) at the second most recent top in the Price

delayedlow = priceMins and ta.barssince(oscMins) < 3 ? low[1] : na
delayedhigh = priceMax and ta.barssince(oscMax) < 3 ? high[1] : na

// only take tops/bottoms in price when tops/bottoms are less than 5 bars away
filter = ta.barssince(priceMins) < 5 ? ta.lowest(currenttrough6, 4) : na
filter2 = ta.barssince(priceMax) < 5 ? ta.highest(currenttrough7, 4) : na

//delayedbottom/top when oscillator bottom/top is earlier than price bottom/top
y11 = ta.valuewhen(oscMins, delayedlow, 0)
y12 = ta.valuewhen(oscMax, delayedhigh, 0)

// only take tops/bottoms in price when tops/bottoms are less than 5 bars away, since 2nd most recent top/bottom in osc
y2 = ta.valuewhen(oscMax, filter2, 1)  // identifies the highest high in the tops of price with 5 bar lookback period SINCE the SECOND most recent top in PPO
y6 = ta.valuewhen(oscMins, filter, 1)  // identifies the lowest low in the bottoms of price with 5 bar lookback period SINCE the SECOND most recent bottom in PPO

long_term_bull_filt = ta.valuewhen(priceMins, ta.lowest(div_lookback_period), 1)
long_term_bear_filt = ta.valuewhen(priceMax, ta.highest(div_lookback_period), 1)

y3 = ta.valuewhen(oscMax, currenttrough5, 0)  // identifies the value of PPO in the most recent top of PPO 
y4 = ta.valuewhen(oscMax, currenttrough5, 1)  // identifies the value of PPO in the second most recent top of PPO 

y7 = ta.valuewhen(oscMins, currenttrough4, 0)  // identifies the value of PPO in the most recent bottom of PPO
y8 = ta.valuewhen(oscMins, currenttrough4, 1)  // identifies the value of PPO in the SECOND most recent bottom of PPO

y9 = ta.valuewhen(oscMins, currenttrough6, 0)
y10 = ta.valuewhen(oscMax, currenttrough7, 0)

bulldiv = BottomPointsInPPO ? d[1] : na  // plots dots at bottoms in the PPO
beardiv = TopPointsInPPO ? d[1] : na  // plots dots at tops in the PPO

i = currenttrough5 < ta.highest(d, div_lookback_period)  // long term bearish oscilator divergence
i2 = y10 > long_term_bear_filt  // long term bearish top divergence
i3 = delayedhigh > long_term_bear_filt  // long term bearish delayedhigh divergence

i4 = currenttrough4 > ta.lowest(d, div_lookback_period)  // long term bullish osc divergence
i5 = y9 < long_term_bull_filt  // long term bullish bottom div
i6 = delayedlow < long_term_bull_filt  // long term bullish delayedbottom div


bearishdiv1 = y10 > y2 and oscMax and y3 < y4 ? true : false
bearishdiv2 = delayedhigh > y2 and y3 < y4 ? true : false
bearishdiv3 = long_term_div and oscMax and i and i2 ? true : false
bearishdiv4 = long_term_div and i and i3 ? true : false

bullishdiv1 = y9 < y6 and oscMins and y7 > y8 ? true : false
bullishdiv2 = delayedlow < y6 and y7 > y8 ? true : false
bullishdiv3 = long_term_div and oscMins and i4 and i5 ? true : false
bullishdiv4 = long_term_div and i4 and i6 ? true : false

bearish = bearishdiv1 or bearishdiv2 or bearishdiv3 or bearishdiv4
bullish = bullishdiv1 or bullishdiv2 or bullishdiv3 or bullishdiv4

greendot = beardiv != 0 ? true : false
reddot = bulldiv != 0 ? true : false

alertcondition(reddot, title='Fib Div Al', message='Fib Div Al {{ticker}}, FİYAT={{close}}')
alertcondition(greendot, title='Fib Div Sat', message='Fib DivSAT {{ticker}}, FİYAT={{close}}')

plotshape(topbots and reddot ? d : na, title = 'Fib Div AL', text='FibDiv', style=shape.triangleup, location=location.belowbar, color=color.new(color.lime, 0), offset=-1, size=size.small)
plotshape(topbots and greendot ? d : na,title ='Fib Div SAT' , text='FibDiv', style=shape.triangledown, location=location.abovebar, color=color.new(color.red, 0), offset=-1, size=size.small)

